---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es-ES">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div id="wrapper">
      <slot />
    </div>
  </body>
</html>
<script>
  const theme = (() => {
    const theme = localStorage.getItem("theme");
    if (theme && typeof localStorage !== undefined) return theme;
    const dark = window.matchMedia("(prefers-color-scheme: dark)").matches;
    return dark ? "dark" : "light";
  })();

  document.documentElement.classList.add(theme!);
</script>
<style is:global>
  :root {
    --panel-gap: 0.5rem;

    --bg-dark: #000;
    --bg-transparent: rgba(0, 0, 0, 0.6);
    --bg-color-gradient: #3088b8;

    --bg-dark--card: rgb(18, 18, 18);

    --padding--card: 0.5rem 0.75rem;
    --border-radius--card: 0.5rem;

    --essential-subdued: #727272;
    --essential-bright-accent: #1ed760;
    --essential-negative: #e91429;
    --essential-warning: #ffa42b;
    --essential-positive: #1ed760;
    --essential-announcement: #0d72ea;
  }
  html {
    font-family: system-ui, sans-serif;
    background-size: 224px;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
  html.light,
  body.light {
    background-color: white;
    color-scheme: light dark;
    color: black;
  }
  html.dark,
  body.dark {
    background-color: black;
    color-scheme: dark light;
    color: white;
  }

  #wrapper {
    padding: var(--panel-gap);
    height: 100dvh;
    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-rows: 1fr;
    gap: var(--panel-gap);
  }
</style>
